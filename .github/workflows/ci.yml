name: CI

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        registry-url: https://registry.npmjs.org/
    - name: Get NodeJS Version
      id: nodeversion
      run: |
        echo "::set-output name=version::$(node --version)"
    - name: Restore node_modules cache
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ steps.nodeversion.outputs.version }}-${{ hashFiles('npm-shrinkwrap.json') }}
    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
    - name: Build
      run: npm run build
    - name: Test
      run: npm run test-with-coverage
    - name: Lint
      run: npm run eslint
    - name: Docker login
      if: (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')) && github.event_name == 'push'
      run: echo ${{ secrets.DOCKER_KEY }} | docker login -u koenkk --password-stdin
    - name: Docker login ghcr.io
      if: (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')) && github.event_name == 'push'
      run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u koenkk --password-stdin
    - name: Docker setup - QEMU
      if: (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')) && github.event_name == 'push'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
    - name: Docker setup - Buildx
      if: (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')) && github.event_name == 'push'
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
    - name: Docker build dev
      if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      run: |
        docker buildx build \
          --build-arg COMMIT=$(git rev-parse --short HEAD) \
          --platform linux/arm64/v8,linux/amd64,linux/arm/v6,linux/arm/v7 \
          -f docker/Dockerfile \
          --push \
          -t koenkk/zigbee2mqtt:latest-dev -t ghcr.io/koenkk/zigbee2mqtt:latest-dev \
          .
    - name: Docker build release
      if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'
      run: |
        TAG="$(git describe --tags)"
        docker buildx build \
          --build-arg COMMIT=$(git rev-parse --short HEAD) \
          --platform linux/arm64/v8,linux/amd64,linux/arm/v6,linux/arm/v7 \
          -f docker/Dockerfile \
          --push \
          -t koenkk/zigbee2mqtt:latest -t "koenkk/zigbee2mqtt:$TAG" -t ghcr.io/koenkk/zigbee2mqtt:latest -t "ghcr.io/koenkk/zigbee2mqtt:$TAG" \
          .
    - name: Publish to npm
      if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN }}
    - name: Trigger zigbee2mqtt/hassio-zigbee2mqtt build
      if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      run: |
        curl -s \
          --request POST \
          --header "Content-Type: application/json" \
          --data '{"definition": {"id": 9}}' \
          -u ${{ secrets.HASSIO_TRIGGER_SECRET }} \
          "https://dev.azure.com/zigbee2mqtt/Zigbee2mqtt%20Add-on/_apis/build/builds?api-version=5.1"
